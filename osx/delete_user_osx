#!/bin/bash

_DEBUG_ON=false

# Data Source for DSCL
OSXDS="."
OSX_USER=
OSX_USER_PATH=/Users

me=$(basename $0)

log()  { printf "$*\n" ; return $? ;  }
fail() { log "\nERROR: $*\n" ; exit 1 ; }

usage() {
  printf "
Usage  
  $me <username>

Note: Probably have to run with sudo
"
  #$me <username> [-home <path>] [-uid <id>] [-gid <id>] [-shell <path>]
}

_dc() {
  dscl ${OSXDS} $*
}

_dc_delete_user_attr() {
  user="$1"
  attribute="$2"
  _dc -delete "$OSX_USER_PATH/$user" "$attribute"
}

_dc_delete_user() {
  user="$1"
  _dc -delete "$OSX_USER_PATH/$user"
}

_delete_user() {
  tu="$1"

  _dc_delete_user_attr $tu NFSHomeDirectory
  _dc_delete_user_attr $tu Password
  _dc_delete_user_attr $tu UserShell
  _dc_delete_user_attr $tu UniqueID
  _dc_delete_user_attr $tu PrimaryGroupID
  _dc_delete_user_attr $tu RealName
  _dc_delete_user "$tu"
  return $?
}

# TODO: accept more options
if [ -z "$1" ] ; then
  usage
  exit 0
fi

target_user="$1"
OSX_USER="/Users/$target_user"

eval $(dscl ${OSXDS} read /Users/$target_user | grep -Ev '^ |RealName' | sed 's/: /=/')
eval $(dscl ${OSXDS} read /Users/$target_user RealName | tr -d '\n' | sed 's/: /="/;s/$/"/')

target_home=${NFSHomeDirectory}
target_gid=${PrimaryGroupID}
target_uid=${UniqueID}
target_shell=${UserShell}
target_name=${RealName}

echo -e "Attempting to delete $target_user with attributes\n\thome: $target_home, shell: $target_shell uid: $target_uid gid: $target_gid name: $target_name" |fmt

[ "$_DEBUG_ON" = true ] && set -x
_delete_user "$target_user"

[ "$?" = 0 ] && log "You should remove ${target_home} now"

set +x
